{"ast":null,"code":"var _jsxFileName = \"D:\\\\ANIMEHINDIHUB\\\\animehindi4u\\\\src\\\\pages\\\\SeriesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport animeData from '../data/animeData.json';\nimport { Box, Container, Typography, Grid, Card, CardMedia, CardContent, CardActions, Button, Chip, CircularProgress, Divider, FormControl, InputLabel, Select, MenuItem, TextField, InputAdornment } from '@mui/material';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport StarIcon from '@mui/icons-material/Star';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SeriesPage() {\n  _s();\n  const [series, setSeries] = useState([]);\n  const [filteredSeries, setFilteredSeries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filter, setFilter] = useState({\n    status: 'all',\n    genres: 'all',\n    sort: 'latest'\n  });\n  useEffect(() => {\n    // Load series data from the comprehensive JSON file\n    const loadSeriesData = () => {\n      try {\n        setLoading(true);\n\n        // Get only TV series from the anime list\n        const allAnime = animeData.animeList || [];\n        const seriesList = allAnime.filter(anime => anime.type === 'TV');\n        setSeries(seriesList);\n        setFilteredSeries(seriesList);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Failed to load series data:\", error);\n        setLoading(false);\n      }\n    };\n    loadSeriesData();\n  }, []);\n\n  // Extract all unique genres from series\n  const allGenres = [...new Set(series.flatMap(s => s.genres || []))].sort();\n\n  // Apply filters and search\n  useEffect(() => {\n    let result = [...series];\n\n    // Apply search filter\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase().trim();\n      result = result.filter(anime => {\n        if (anime.title.toLowerCase().includes(term)) return true;\n        if (anime.altTitles && anime.altTitles.some(alt => alt.toLowerCase().includes(term))) return true;\n        if (anime.genres && anime.genres.some(genre => genre.toLowerCase().includes(term))) return true;\n        return false;\n      });\n    }\n\n    // Apply status filter\n    if (filter.status !== 'all') {\n      result = result.filter(anime => anime.status === filter.status);\n    }\n\n    // Apply genre filter\n    if (filter.genres !== 'all') {\n      result = result.filter(anime => anime.genres && anime.genres.includes(filter.genres));\n    }\n\n    // Apply sort\n    switch (filter.sort) {\n      case 'latest':\n        result.sort((a, b) => b.year - a.year);\n        break;\n      case 'oldest':\n        result.sort((a, b) => a.year - b.year);\n        break;\n      case 'a-z':\n        result.sort((a, b) => a.title.localeCompare(b.title));\n        break;\n      case 'z-a':\n        result.sort((a, b) => b.title.localeCompare(a.title));\n        break;\n      case 'rating':\n        result.sort((a, b) => b.rating - a.rating);\n        break;\n      case 'popular':\n        result.sort((a, b) => b.views - a.views);\n        break;\n      default:\n        break;\n    }\n    setFilteredSeries(result);\n  }, [series, searchTerm, filter]);\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleFilterChange = name => event => {\n    setFilter({\n      ...filter,\n      [name]: event.target.value\n    });\n  };\n  const renderSeriesCard = series => /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        bgcolor: 'rgba(255, 255, 255, 0.05)',\n        transition: 'transform 0.3s ease-in-out',\n        '&:hover': {\n          transform: 'scale(1.03)',\n          boxShadow: '0 8px 16px rgba(0,0,0,0.3)',\n          bgcolor: 'rgba(255, 255, 255, 0.08)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: 250,\n          image: series.cover,\n          alt: series.title,\n          sx: {\n            objectFit: 'cover'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'absolute',\n            top: 10,\n            right: 10,\n            display: 'flex',\n            alignItems: 'center',\n            bgcolor: 'rgba(0, 0, 0, 0.7)',\n            borderRadius: 1,\n            px: 1,\n            py: 0.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(StarIcon, {\n            sx: {\n              color: '#FFD700',\n              fontSize: 18,\n              mr: 0.5\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              fontWeight: 'bold',\n              color: 'white'\n            },\n            children: series.rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), series.status === 'Completed' && /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Completed\",\n          size: \"small\",\n          sx: {\n            position: 'absolute',\n            top: 10,\n            left: 10,\n            bgcolor: '#4caf50',\n            color: 'white',\n            fontWeight: 'bold'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          flexGrow: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            fontWeight: 'bold',\n            mb: 1\n          },\n          children: series.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            mb: 1,\n            flexWrap: 'wrap',\n            gap: 0.5\n          },\n          children: series.genres && series.genres.slice(0, 3).map((genre, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            label: genre,\n            size: \"small\",\n            sx: {\n              bgcolor: 'rgba(255, 255, 255, 0.1)',\n              color: 'text.secondary',\n              fontSize: '0.75rem'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [series.episodes, \" Episodes \\u2022 \", series.year, \" \\u2022 \", series.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        sx: {\n          p: 2,\n          pt: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          component: RouterLink,\n          to: `/anime/${series.id}`,\n          variant: \"contained\",\n          size: \"small\",\n          startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 24\n          }, this),\n          sx: {\n            bgcolor: '#ffb6c1',\n            color: '#000',\n            fontWeight: 'bold',\n            '&:hover': {\n              bgcolor: '#ff99a8'\n            },\n            flexGrow: 1\n          },\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, series.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      bgcolor: '#121212',\n      minHeight: '100vh',\n      pt: 3,\n      pb: 6\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          sx: {\n            fontWeight: 'bold',\n            mb: 1,\n            color: 'white',\n            textAlign: {\n              xs: 'center',\n              md: 'left'\n            }\n          },\n          children: \"Anime TV Series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 2,\n            textAlign: {\n              xs: 'center',\n              md: 'left'\n            }\n          },\n          children: \"Explore our collection of Hindi dubbed anime series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            borderColor: 'rgba(255, 255, 255, 0.1)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          flexDirection: {\n            xs: 'column',\n            md: 'row'\n          },\n          gap: 2,\n          mb: 4,\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          placeholder: \"Search series...\",\n          value: searchTerm,\n          onChange: handleSearchChange,\n          variant: \"outlined\",\n          fullWidth: true,\n          sx: {\n            flex: 2,\n            '.MuiOutlinedInput-root': {\n              bgcolor: 'rgba(255, 255, 255, 0.05)',\n              borderRadius: 2,\n              color: 'white',\n              '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'rgba(255, 255, 255, 0.5)'\n              },\n              '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: '#ffb6c1'\n              }\n            }\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.7)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          sx: {\n            flex: 1,\n            minWidth: 120\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"status-label\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.7)'\n            },\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"status-label\",\n            value: filter.status,\n            onChange: handleFilterChange('status'),\n            label: \"Status\",\n            sx: {\n              bgcolor: 'rgba(255, 255, 255, 0.05)',\n              color: 'white',\n              '.MuiOutlinedInput-notchedOutline': {\n                borderColor: 'rgba(255, 255, 255, 0.3)'\n              },\n              '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'rgba(255, 255, 255, 0.5)'\n              },\n              '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: '#ffb6c1'\n              },\n              '.MuiSvgIcon-root': {\n                color: 'white'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Completed\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          sx: {\n            flex: 1,\n            minWidth: 120\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"genre-label\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.7)'\n            },\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"genre-label\",\n            value: filter.genres,\n            onChange: handleFilterChange('genres'),\n            label: \"Genre\",\n            sx: {\n              bgcolor: 'rgba(255, 255, 255, 0.05)',\n              color: 'white',\n              '.MuiOutlinedInput-notchedOutline': {\n                borderColor: 'rgba(255, 255, 255, 0.3)'\n              },\n              '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'rgba(255, 255, 255, 0.5)'\n              },\n              '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: '#ffb6c1'\n              },\n              '.MuiSvgIcon-root': {\n                color: 'white'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"all\",\n              children: \"All Genres\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), allGenres.map(genre => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: genre,\n              children: genre\n            }, genre, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          sx: {\n            flex: 1,\n            minWidth: 120\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"sort-label\",\n            sx: {\n              color: 'rgba(255, 255, 255, 0.7)'\n            },\n            children: \"Sort By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"sort-label\",\n            value: filter.sort,\n            onChange: handleFilterChange('sort'),\n            label: \"Sort By\",\n            sx: {\n              bgcolor: 'rgba(255, 255, 255, 0.05)',\n              color: 'white',\n              '.MuiOutlinedInput-notchedOutline': {\n                borderColor: 'rgba(255, 255, 255, 0.3)'\n              },\n              '&:hover .MuiOutlinedInput-notchedOutline': {\n                borderColor: 'rgba(255, 255, 255, 0.5)'\n              },\n              '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\n                borderColor: '#ffb6c1'\n              },\n              '.MuiSvgIcon-root': {\n                color: 'white'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"latest\",\n              children: \"Latest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"oldest\",\n              children: \"Oldest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"a-z\",\n              children: \"A-Z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"z-a\",\n              children: \"Z-A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"rating\",\n              children: \"Highest Rated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"popular\",\n              children: \"Most Popular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          py: 8\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          sx: {\n            color: '#ffb6c1'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this) : filteredSeries.length === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          textAlign: 'center',\n          my: 8,\n          color: 'text.secondary'\n        },\n        children: \"No series found matching your criteria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: filteredSeries.map(series => renderSeriesCard(series))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n_s(SeriesPage, \"RzIEMZc6nZyYHFMMsiMYdJx7Tno=\");\n_c = SeriesPage;\nexport default SeriesPage;\nvar _c;\n$RefreshReg$(_c, \"SeriesPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","RouterLink","animeData","Box","Container","Typography","Grid","Card","CardMedia","CardContent","CardActions","Button","Chip","CircularProgress","Divider","FormControl","InputLabel","Select","MenuItem","TextField","InputAdornment","PlayArrowIcon","DownloadIcon","StarIcon","SearchIcon","jsxDEV","_jsxDEV","SeriesPage","_s","series","setSeries","filteredSeries","setFilteredSeries","loading","setLoading","searchTerm","setSearchTerm","filter","setFilter","status","genres","sort","loadSeriesData","allAnime","animeList","seriesList","anime","type","error","console","allGenres","Set","flatMap","s","result","term","toLowerCase","trim","title","includes","altTitles","some","alt","genre","a","b","year","localeCompare","rating","views","handleSearchChange","event","target","value","handleFilterChange","name","renderSeriesCard","item","xs","sm","md","lg","children","sx","height","display","flexDirection","bgcolor","transition","transform","boxShadow","position","component","image","cover","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","top","right","alignItems","borderRadius","px","py","color","fontSize","mr","variant","fontWeight","label","size","left","flexGrow","mb","flexWrap","gap","slice","map","index","episodes","language","p","pt","to","id","startIcon","minHeight","pb","maxWidth","textAlign","borderColor","placeholder","onChange","fullWidth","flex","InputProps","startAdornment","minWidth","labelId","justifyContent","length","my","container","spacing","_c","$RefreshReg$"],"sources":["D:/ANIMEHINDIHUB/animehindi4u/src/pages/SeriesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport animeData from '../data/animeData.json';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Chip,\r\n  CircularProgress,\r\n  Divider,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  InputAdornment,\r\n} from '@mui/material';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nfunction SeriesPage() {\r\n  const [series, setSeries] = useState([]);\r\n  const [filteredSeries, setFilteredSeries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filter, setFilter] = useState({\r\n    status: 'all',\r\n    genres: 'all',\r\n    sort: 'latest'\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Load series data from the comprehensive JSON file\r\n    const loadSeriesData = () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Get only TV series from the anime list\r\n        const allAnime = animeData.animeList || [];\r\n        const seriesList = allAnime.filter(anime => anime.type === 'TV');\r\n        \r\n        setSeries(seriesList);\r\n        setFilteredSeries(seriesList);\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Failed to load series data:\", error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    loadSeriesData();\r\n  }, []);\r\n\r\n  // Extract all unique genres from series\r\n  const allGenres = [...new Set(series.flatMap(s => s.genres || []))].sort();\r\n\r\n  // Apply filters and search\r\n  useEffect(() => {\r\n    let result = [...series];\r\n    \r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      const term = searchTerm.toLowerCase().trim();\r\n      result = result.filter(anime => {\r\n        if (anime.title.toLowerCase().includes(term)) return true;\r\n        if (anime.altTitles && anime.altTitles.some(alt => alt.toLowerCase().includes(term))) return true;\r\n        if (anime.genres && anime.genres.some(genre => genre.toLowerCase().includes(term))) return true;\r\n        return false;\r\n      });\r\n    }\r\n    \r\n    // Apply status filter\r\n    if (filter.status !== 'all') {\r\n      result = result.filter(anime => anime.status === filter.status);\r\n    }\r\n    \r\n    // Apply genre filter\r\n    if (filter.genres !== 'all') {\r\n      result = result.filter(anime => anime.genres && anime.genres.includes(filter.genres));\r\n    }\r\n    \r\n    // Apply sort\r\n    switch (filter.sort) {\r\n      case 'latest':\r\n        result.sort((a, b) => b.year - a.year);\r\n        break;\r\n      case 'oldest':\r\n        result.sort((a, b) => a.year - b.year);\r\n        break;\r\n      case 'a-z':\r\n        result.sort((a, b) => a.title.localeCompare(b.title));\r\n        break;\r\n      case 'z-a':\r\n        result.sort((a, b) => b.title.localeCompare(a.title));\r\n        break;\r\n      case 'rating':\r\n        result.sort((a, b) => b.rating - a.rating);\r\n        break;\r\n      case 'popular':\r\n        result.sort((a, b) => b.views - a.views);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    setFilteredSeries(result);\r\n  }, [series, searchTerm, filter]);\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleFilterChange = (name) => (event) => {\r\n    setFilter({\r\n      ...filter,\r\n      [name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const renderSeriesCard = (series) => (\r\n    <Grid item xs={12} sm={6} md={4} lg={3} key={series.id}>\r\n      <Card \r\n        sx={{ \r\n          height: '100%', \r\n          display: 'flex', \r\n          flexDirection: 'column',\r\n          bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n          transition: 'transform 0.3s ease-in-out',\r\n          '&:hover': {\r\n            transform: 'scale(1.03)',\r\n            boxShadow: '0 8px 16px rgba(0,0,0,0.3)',\r\n            bgcolor: 'rgba(255, 255, 255, 0.08)',\r\n          }\r\n        }}\r\n      >\r\n        <Box sx={{ position: 'relative' }}>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height={250}\r\n            image={series.cover}\r\n            alt={series.title}\r\n            sx={{ objectFit: 'cover' }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 10,\r\n              right: 10,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              bgcolor: 'rgba(0, 0, 0, 0.7)',\r\n              borderRadius: 1,\r\n              px: 1,\r\n              py: 0.5,\r\n            }}\r\n          >\r\n            <StarIcon sx={{ color: '#FFD700', fontSize: 18, mr: 0.5 }} />\r\n            <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: 'white' }}>\r\n              {series.rating}\r\n            </Typography>\r\n          </Box>\r\n          {series.status === 'Completed' && (\r\n            <Chip\r\n              label=\"Completed\"\r\n              size=\"small\"\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 10,\r\n                left: 10,\r\n                bgcolor: '#4caf50',\r\n                color: 'white',\r\n                fontWeight: 'bold',\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n        \r\n        <CardContent sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ fontWeight: 'bold', mb: 1 }}>\r\n            {series.title}\r\n          </Typography>\r\n          \r\n          <Box sx={{ display: 'flex', mb: 1, flexWrap: 'wrap', gap: 0.5 }}>\r\n            {series.genres && series.genres.slice(0, 3).map((genre, index) => (\r\n              <Chip \r\n                key={index} \r\n                label={genre} \r\n                size=\"small\" \r\n                sx={{ \r\n                  bgcolor: 'rgba(255, 255, 255, 0.1)',\r\n                  color: 'text.secondary',\r\n                  fontSize: '0.75rem',\r\n                }} \r\n              />\r\n            ))}\r\n          </Box>\r\n          \r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {series.episodes} Episodes • {series.year} • {series.language}\r\n          </Typography>\r\n        </CardContent>\r\n        \r\n        <CardActions sx={{ p: 2, pt: 0 }}>\r\n          <Button\r\n            component={RouterLink}\r\n            to={`/anime/${series.id}`}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            startIcon={<DownloadIcon />}\r\n            sx={{ \r\n              bgcolor: '#ffb6c1',\r\n              color: '#000',\r\n              fontWeight: 'bold',\r\n              '&:hover': {\r\n                bgcolor: '#ff99a8',\r\n              },\r\n              flexGrow: 1\r\n            }}\r\n          >\r\n            Download\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ bgcolor: '#121212', minHeight: '100vh', pt: 3, pb: 6 }}>\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography \r\n            variant=\"h4\" \r\n            component=\"h1\" \r\n            sx={{ \r\n              fontWeight: 'bold',\r\n              mb: 1,\r\n              color: 'white',\r\n              textAlign: { xs: 'center', md: 'left' }\r\n            }}\r\n          >\r\n            Anime TV Series\r\n          </Typography>\r\n          <Typography \r\n            variant=\"body1\" \r\n            color=\"text.secondary\"\r\n            sx={{ \r\n              mb: 2,\r\n              textAlign: { xs: 'center', md: 'left' }\r\n            }}\r\n          >\r\n            Explore our collection of Hindi dubbed anime series\r\n          </Typography>\r\n          <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.1)' }} />\r\n        </Box>\r\n\r\n        <Box \r\n          sx={{ \r\n            display: 'flex', \r\n            flexDirection: { xs: 'column', md: 'row' }, \r\n            gap: 2, \r\n            mb: 4,\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <TextField\r\n            placeholder=\"Search series...\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            sx={{\r\n              flex: 2,\r\n              '.MuiOutlinedInput-root': {\r\n                bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n                borderRadius: 2,\r\n                color: 'white',\r\n                '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                },\r\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: '#ffb6c1',\r\n                },\r\n              }\r\n            }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon sx={{ color: 'rgba(255, 255, 255, 0.7)' }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          \r\n          <FormControl variant=\"outlined\" sx={{ flex: 1, minWidth: 120 }}>\r\n            <InputLabel id=\"status-label\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>Status</InputLabel>\r\n            <Select\r\n              labelId=\"status-label\"\r\n              value={filter.status}\r\n              onChange={handleFilterChange('status')}\r\n              label=\"Status\"\r\n              sx={{\r\n                bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n                color: 'white',\r\n                '.MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                },\r\n                '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                },\r\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: '#ffb6c1',\r\n                },\r\n                '.MuiSvgIcon-root': {\r\n                  color: 'white',\r\n                }\r\n              }}\r\n            >\r\n              <MenuItem value=\"all\">All Status</MenuItem>\r\n              <MenuItem value=\"Completed\">Completed</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          <FormControl variant=\"outlined\" sx={{ flex: 1, minWidth: 120 }}>\r\n            <InputLabel id=\"genre-label\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>Genre</InputLabel>\r\n            <Select\r\n              labelId=\"genre-label\"\r\n              value={filter.genres}\r\n              onChange={handleFilterChange('genres')}\r\n              label=\"Genre\"\r\n              sx={{\r\n                bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n                color: 'white',\r\n                '.MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                },\r\n                '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                },\r\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: '#ffb6c1',\r\n                },\r\n                '.MuiSvgIcon-root': {\r\n                  color: 'white',\r\n                }\r\n              }}\r\n            >\r\n              <MenuItem value=\"all\">All Genres</MenuItem>\r\n              {allGenres.map(genre => (\r\n                <MenuItem key={genre} value={genre}>{genre}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          <FormControl variant=\"outlined\" sx={{ flex: 1, minWidth: 120 }}>\r\n            <InputLabel id=\"sort-label\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>Sort By</InputLabel>\r\n            <Select\r\n              labelId=\"sort-label\"\r\n              value={filter.sort}\r\n              onChange={handleFilterChange('sort')}\r\n              label=\"Sort By\"\r\n              sx={{\r\n                bgcolor: 'rgba(255, 255, 255, 0.05)',\r\n                color: 'white',\r\n                '.MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                },\r\n                '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                },\r\n                '&.Mui-focused .MuiOutlinedInput-notchedOutline': {\r\n                  borderColor: '#ffb6c1',\r\n                },\r\n                '.MuiSvgIcon-root': {\r\n                  color: 'white',\r\n                }\r\n              }}\r\n            >\r\n              <MenuItem value=\"latest\">Latest</MenuItem>\r\n              <MenuItem value=\"oldest\">Oldest</MenuItem>\r\n              <MenuItem value=\"a-z\">A-Z</MenuItem>\r\n              <MenuItem value=\"z-a\">Z-A</MenuItem>\r\n              <MenuItem value=\"rating\">Highest Rated</MenuItem>\r\n              <MenuItem value=\"popular\">Most Popular</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        {loading ? (\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', py: 8 }}>\r\n            <CircularProgress sx={{ color: '#ffb6c1' }} />\r\n          </Box>\r\n        ) : filteredSeries.length === 0 ? (\r\n          <Typography variant=\"h6\" sx={{ textAlign: 'center', my: 8, color: 'text.secondary' }}>\r\n            No series found matching your criteria\r\n          </Typography>\r\n        ) : (\r\n          <Grid container spacing={3}>\r\n            {filteredSeries.map(series => renderSeriesCard(series))}\r\n          </Grid>\r\n        )}\r\n      </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SeriesPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,IAAIC,UAAU,QAAQ,kBAAkB;AACrD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SACEC,GAAG,EACHC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,MAAM,EACNC,IAAI,EACJC,gBAAgB,EAChBC,OAAO,EACPC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,cAAc,QACT,eAAe;AACtB,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuC,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAAC;IACnCyC,MAAM,EAAE,KAAK;IACbC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE;EACR,CAAC,CAAC;EAEF1C,SAAS,CAAC,MAAM;IACd;IACA,MAAM2C,cAAc,GAAGA,CAAA,KAAM;MAC3B,IAAI;QACFR,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACA,MAAMS,QAAQ,GAAGzC,SAAS,CAAC0C,SAAS,IAAI,EAAE;QAC1C,MAAMC,UAAU,GAAGF,QAAQ,CAACN,MAAM,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,IAAI,CAAC;QAEhEjB,SAAS,CAACe,UAAU,CAAC;QACrBb,iBAAiB,CAACa,UAAU,CAAC;QAE7BX,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDQ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACtB,MAAM,CAACuB,OAAO,CAACC,CAAC,IAAIA,CAAC,CAACb,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;;EAE1E;EACA1C,SAAS,CAAC,MAAM;IACd,IAAIuD,MAAM,GAAG,CAAC,GAAGzB,MAAM,CAAC;;IAExB;IACA,IAAIM,UAAU,EAAE;MACd,MAAMoB,IAAI,GAAGpB,UAAU,CAACqB,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;MAC5CH,MAAM,GAAGA,MAAM,CAACjB,MAAM,CAACS,KAAK,IAAI;QAC9B,IAAIA,KAAK,CAACY,KAAK,CAACF,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,IAAI,CAAC,EAAE,OAAO,IAAI;QACzD,IAAIT,KAAK,CAACc,SAAS,IAAId,KAAK,CAACc,SAAS,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACN,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI;QACjG,IAAIT,KAAK,CAACN,MAAM,IAAIM,KAAK,CAACN,MAAM,CAACqB,IAAI,CAACE,KAAK,IAAIA,KAAK,CAACP,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI;QAC/F,OAAO,KAAK;MACd,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIlB,MAAM,CAACE,MAAM,KAAK,KAAK,EAAE;MAC3Be,MAAM,GAAGA,MAAM,CAACjB,MAAM,CAACS,KAAK,IAAIA,KAAK,CAACP,MAAM,KAAKF,MAAM,CAACE,MAAM,CAAC;IACjE;;IAEA;IACA,IAAIF,MAAM,CAACG,MAAM,KAAK,KAAK,EAAE;MAC3Bc,MAAM,GAAGA,MAAM,CAACjB,MAAM,CAACS,KAAK,IAAIA,KAAK,CAACN,MAAM,IAAIM,KAAK,CAACN,MAAM,CAACmB,QAAQ,CAACtB,MAAM,CAACG,MAAM,CAAC,CAAC;IACvF;;IAEA;IACA,QAAQH,MAAM,CAACI,IAAI;MACjB,KAAK,QAAQ;QACXa,MAAM,CAACb,IAAI,CAAC,CAACuB,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,CAAC;QACtC;MACF,KAAK,QAAQ;QACXZ,MAAM,CAACb,IAAI,CAAC,CAACuB,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,CAAC;QACtC;MACF,KAAK,KAAK;QACRZ,MAAM,CAACb,IAAI,CAAC,CAACuB,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACN,KAAK,CAACS,aAAa,CAACF,CAAC,CAACP,KAAK,CAAC,CAAC;QACrD;MACF,KAAK,KAAK;QACRJ,MAAM,CAACb,IAAI,CAAC,CAACuB,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACP,KAAK,CAACS,aAAa,CAACH,CAAC,CAACN,KAAK,CAAC,CAAC;QACrD;MACF,KAAK,QAAQ;QACXJ,MAAM,CAACb,IAAI,CAAC,CAACuB,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACG,MAAM,GAAGJ,CAAC,CAACI,MAAM,CAAC;QAC1C;MACF,KAAK,SAAS;QACZd,MAAM,CAACb,IAAI,CAAC,CAACuB,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACI,KAAK,GAAGL,CAAC,CAACK,KAAK,CAAC;QACxC;MACF;QACE;IACJ;IAEArC,iBAAiB,CAACsB,MAAM,CAAC;EAC3B,CAAC,EAAE,CAACzB,MAAM,EAAEM,UAAU,EAAEE,MAAM,CAAC,CAAC;EAEhC,MAAMiC,kBAAkB,GAAIC,KAAK,IAAK;IACpCnC,aAAa,CAACmC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,kBAAkB,GAAIC,IAAI,IAAMJ,KAAK,IAAK;IAC9CjC,SAAS,CAAC;MACR,GAAGD,MAAM;MACT,CAACsC,IAAI,GAAGJ,KAAK,CAACC,MAAM,CAACC;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMG,gBAAgB,GAAI/C,MAAM,iBAC9BH,OAAA,CAACpB,IAAI;IAACuE,IAAI;IAACC,EAAE,EAAE,EAAG;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAACC,EAAE,EAAE,CAAE;IAAAC,QAAA,eACrCxD,OAAA,CAACnB,IAAI;MACH4E,EAAE,EAAE;QACFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,OAAO,EAAE,2BAA2B;QACpCC,UAAU,EAAE,4BAA4B;QACxC,SAAS,EAAE;UACTC,SAAS,EAAE,aAAa;UACxBC,SAAS,EAAE,4BAA4B;UACvCH,OAAO,EAAE;QACX;MACF,CAAE;MAAAL,QAAA,gBAEFxD,OAAA,CAACvB,GAAG;QAACgF,EAAE,EAAE;UAAEQ,QAAQ,EAAE;QAAW,CAAE;QAAAT,QAAA,gBAChCxD,OAAA,CAAClB,SAAS;UACRoF,SAAS,EAAC,KAAK;UACfR,MAAM,EAAE,GAAI;UACZS,KAAK,EAAEhE,MAAM,CAACiE,KAAM;UACpBhC,GAAG,EAAEjC,MAAM,CAAC6B,KAAM;UAClByB,EAAE,EAAE;YAAEY,SAAS,EAAE;UAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFzE,OAAA,CAACvB,GAAG;UACFgF,EAAE,EAAE;YACFQ,QAAQ,EAAE,UAAU;YACpBS,GAAG,EAAE,EAAE;YACPC,KAAK,EAAE,EAAE;YACThB,OAAO,EAAE,MAAM;YACfiB,UAAU,EAAE,QAAQ;YACpBf,OAAO,EAAE,oBAAoB;YAC7BgB,YAAY,EAAE,CAAC;YACfC,EAAE,EAAE,CAAC;YACLC,EAAE,EAAE;UACN,CAAE;UAAAvB,QAAA,gBAEFxD,OAAA,CAACH,QAAQ;YAAC4D,EAAE,EAAE;cAAEuB,KAAK,EAAE,SAAS;cAAEC,QAAQ,EAAE,EAAE;cAAEC,EAAE,EAAE;YAAI;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7DzE,OAAA,CAACrB,UAAU;YAACwG,OAAO,EAAC,OAAO;YAAC1B,EAAE,EAAE;cAAE2B,UAAU,EAAE,MAAM;cAAEJ,KAAK,EAAE;YAAQ,CAAE;YAAAxB,QAAA,EACpErD,MAAM,CAACuC;UAAM;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,EACLtE,MAAM,CAACU,MAAM,KAAK,WAAW,iBAC5Bb,OAAA,CAACd,IAAI;UACHmG,KAAK,EAAC,WAAW;UACjBC,IAAI,EAAC,OAAO;UACZ7B,EAAE,EAAE;YACFQ,QAAQ,EAAE,UAAU;YACpBS,GAAG,EAAE,EAAE;YACPa,IAAI,EAAE,EAAE;YACR1B,OAAO,EAAE,SAAS;YAClBmB,KAAK,EAAE,OAAO;YACdI,UAAU,EAAE;UACd;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENzE,OAAA,CAACjB,WAAW;QAAC0E,EAAE,EAAE;UAAE+B,QAAQ,EAAE;QAAE,CAAE;QAAAhC,QAAA,gBAC/BxD,OAAA,CAACrB,UAAU;UAACwG,OAAO,EAAC,IAAI;UAACjB,SAAS,EAAC,KAAK;UAACT,EAAE,EAAE;YAAE2B,UAAU,EAAE,MAAM;YAAEK,EAAE,EAAE;UAAE,CAAE;UAAAjC,QAAA,EACxErD,MAAM,CAAC6B;QAAK;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEbzE,OAAA,CAACvB,GAAG;UAACgF,EAAE,EAAE;YAAEE,OAAO,EAAE,MAAM;YAAE8B,EAAE,EAAE,CAAC;YAAEC,QAAQ,EAAE,MAAM;YAAEC,GAAG,EAAE;UAAI,CAAE;UAAAnC,QAAA,EAC7DrD,MAAM,CAACW,MAAM,IAAIX,MAAM,CAACW,MAAM,CAAC8E,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACxD,KAAK,EAAEyD,KAAK,kBAC3D9F,OAAA,CAACd,IAAI;YAEHmG,KAAK,EAAEhD,KAAM;YACbiD,IAAI,EAAC,OAAO;YACZ7B,EAAE,EAAE;cACFI,OAAO,EAAE,0BAA0B;cACnCmB,KAAK,EAAE,gBAAgB;cACvBC,QAAQ,EAAE;YACZ;UAAE,GAPGa,KAAK;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQX,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENzE,OAAA,CAACrB,UAAU;UAACwG,OAAO,EAAC,OAAO;UAACH,KAAK,EAAC,gBAAgB;UAAAxB,QAAA,GAC/CrD,MAAM,CAAC4F,QAAQ,EAAC,mBAAY,EAAC5F,MAAM,CAACqC,IAAI,EAAC,UAAG,EAACrC,MAAM,CAAC6F,QAAQ;QAAA;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEdzE,OAAA,CAAChB,WAAW;QAACyE,EAAE,EAAE;UAAEwC,CAAC,EAAE,CAAC;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAA1C,QAAA,eAC/BxD,OAAA,CAACf,MAAM;UACLiF,SAAS,EAAE3F,UAAW;UACtB4H,EAAE,EAAE,UAAUhG,MAAM,CAACiG,EAAE,EAAG;UAC1BjB,OAAO,EAAC,WAAW;UACnBG,IAAI,EAAC,OAAO;UACZe,SAAS,eAAErG,OAAA,CAACJ,YAAY;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAC5BhB,EAAE,EAAE;YACFI,OAAO,EAAE,SAAS;YAClBmB,KAAK,EAAE,MAAM;YACbI,UAAU,EAAE,MAAM;YAClB,SAAS,EAAE;cACTvB,OAAO,EAAE;YACX,CAAC;YACD2B,QAAQ,EAAE;UACZ,CAAE;UAAAhC,QAAA,EACH;QAED;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,GAtGoCtE,MAAM,CAACiG,EAAE;IAAA9B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAuGhD,CACP;EAED,oBACEzE,OAAA,CAACvB,GAAG;IAACgF,EAAE,EAAE;MAAEI,OAAO,EAAE,SAAS;MAAEyC,SAAS,EAAE,OAAO;MAAEJ,EAAE,EAAE,CAAC;MAAEK,EAAE,EAAE;IAAE,CAAE;IAAA/C,QAAA,eAChExD,OAAA,CAACtB,SAAS;MAAC8H,QAAQ,EAAC,IAAI;MAAAhD,QAAA,gBACtBxD,OAAA,CAACvB,GAAG;QAACgF,EAAE,EAAE;UAAEgC,EAAE,EAAE;QAAE,CAAE;QAAAjC,QAAA,gBACjBxD,OAAA,CAACrB,UAAU;UACTwG,OAAO,EAAC,IAAI;UACZjB,SAAS,EAAC,IAAI;UACdT,EAAE,EAAE;YACF2B,UAAU,EAAE,MAAM;YAClBK,EAAE,EAAE,CAAC;YACLT,KAAK,EAAE,OAAO;YACdyB,SAAS,EAAE;cAAErD,EAAE,EAAE,QAAQ;cAAEE,EAAE,EAAE;YAAO;UACxC,CAAE;UAAAE,QAAA,EACH;QAED;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbzE,OAAA,CAACrB,UAAU;UACTwG,OAAO,EAAC,OAAO;UACfH,KAAK,EAAC,gBAAgB;UACtBvB,EAAE,EAAE;YACFgC,EAAE,EAAE,CAAC;YACLgB,SAAS,EAAE;cAAErD,EAAE,EAAE,QAAQ;cAAEE,EAAE,EAAE;YAAO;UACxC,CAAE;UAAAE,QAAA,EACH;QAED;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbzE,OAAA,CAACZ,OAAO;UAACqE,EAAE,EAAE;YAAEiD,WAAW,EAAE;UAA2B;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eAENzE,OAAA,CAACvB,GAAG;QACFgF,EAAE,EAAE;UACFE,OAAO,EAAE,MAAM;UACfC,aAAa,EAAE;YAAER,EAAE,EAAE,QAAQ;YAAEE,EAAE,EAAE;UAAM,CAAC;UAC1CqC,GAAG,EAAE,CAAC;UACNF,EAAE,EAAE,CAAC;UACLb,UAAU,EAAE;QACd,CAAE;QAAApB,QAAA,gBAEFxD,OAAA,CAACP,SAAS;UACRkH,WAAW,EAAC,kBAAkB;UAC9B5D,KAAK,EAAEtC,UAAW;UAClBmG,QAAQ,EAAEhE,kBAAmB;UAC7BuC,OAAO,EAAC,UAAU;UAClB0B,SAAS;UACTpD,EAAE,EAAE;YACFqD,IAAI,EAAE,CAAC;YACP,wBAAwB,EAAE;cACxBjD,OAAO,EAAE,2BAA2B;cACpCgB,YAAY,EAAE,CAAC;cACfG,KAAK,EAAE,OAAO;cACd,0CAA0C,EAAE;gBAC1C0B,WAAW,EAAE;cACf,CAAC;cACD,gDAAgD,EAAE;gBAChDA,WAAW,EAAE;cACf;YACF;UACF,CAAE;UACFK,UAAU,EAAE;YACVC,cAAc,eACZhH,OAAA,CAACN,cAAc;cAACuE,QAAQ,EAAC,OAAO;cAAAT,QAAA,eAC9BxD,OAAA,CAACF,UAAU;gBAAC2D,EAAE,EAAE;kBAAEuB,KAAK,EAAE;gBAA2B;cAAE;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C;UAEpB;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEFzE,OAAA,CAACX,WAAW;UAAC8F,OAAO,EAAC,UAAU;UAAC1B,EAAE,EAAE;YAAEqD,IAAI,EAAE,CAAC;YAAEG,QAAQ,EAAE;UAAI,CAAE;UAAAzD,QAAA,gBAC7DxD,OAAA,CAACV,UAAU;YAAC8G,EAAE,EAAC,cAAc;YAAC3C,EAAE,EAAE;cAAEuB,KAAK,EAAE;YAA2B,CAAE;YAAAxB,QAAA,EAAC;UAAM;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC5FzE,OAAA,CAACT,MAAM;YACL2H,OAAO,EAAC,cAAc;YACtBnE,KAAK,EAAEpC,MAAM,CAACE,MAAO;YACrB+F,QAAQ,EAAE5D,kBAAkB,CAAC,QAAQ,CAAE;YACvCqC,KAAK,EAAC,QAAQ;YACd5B,EAAE,EAAE;cACFI,OAAO,EAAE,2BAA2B;cACpCmB,KAAK,EAAE,OAAO;cACd,kCAAkC,EAAE;gBAClC0B,WAAW,EAAE;cACf,CAAC;cACD,0CAA0C,EAAE;gBAC1CA,WAAW,EAAE;cACf,CAAC;cACD,gDAAgD,EAAE;gBAChDA,WAAW,EAAE;cACf,CAAC;cACD,kBAAkB,EAAE;gBAClB1B,KAAK,EAAE;cACT;YACF,CAAE;YAAAxB,QAAA,gBAEFxD,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,KAAK;cAAAS,QAAA,EAAC;YAAU;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC3CzE,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,WAAW;cAAAS,QAAA,EAAC;YAAS;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEdzE,OAAA,CAACX,WAAW;UAAC8F,OAAO,EAAC,UAAU;UAAC1B,EAAE,EAAE;YAAEqD,IAAI,EAAE,CAAC;YAAEG,QAAQ,EAAE;UAAI,CAAE;UAAAzD,QAAA,gBAC7DxD,OAAA,CAACV,UAAU;YAAC8G,EAAE,EAAC,aAAa;YAAC3C,EAAE,EAAE;cAAEuB,KAAK,EAAE;YAA2B,CAAE;YAAAxB,QAAA,EAAC;UAAK;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC1FzE,OAAA,CAACT,MAAM;YACL2H,OAAO,EAAC,aAAa;YACrBnE,KAAK,EAAEpC,MAAM,CAACG,MAAO;YACrB8F,QAAQ,EAAE5D,kBAAkB,CAAC,QAAQ,CAAE;YACvCqC,KAAK,EAAC,OAAO;YACb5B,EAAE,EAAE;cACFI,OAAO,EAAE,2BAA2B;cACpCmB,KAAK,EAAE,OAAO;cACd,kCAAkC,EAAE;gBAClC0B,WAAW,EAAE;cACf,CAAC;cACD,0CAA0C,EAAE;gBAC1CA,WAAW,EAAE;cACf,CAAC;cACD,gDAAgD,EAAE;gBAChDA,WAAW,EAAE;cACf,CAAC;cACD,kBAAkB,EAAE;gBAClB1B,KAAK,EAAE;cACT;YACF,CAAE;YAAAxB,QAAA,gBAEFxD,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,KAAK;cAAAS,QAAA,EAAC;YAAU;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,EAC1CjD,SAAS,CAACqE,GAAG,CAACxD,KAAK,iBAClBrC,OAAA,CAACR,QAAQ;cAAauD,KAAK,EAAEV,KAAM;cAAAmB,QAAA,EAAEnB;YAAK,GAA3BA,KAAK;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAiC,CACtD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEdzE,OAAA,CAACX,WAAW;UAAC8F,OAAO,EAAC,UAAU;UAAC1B,EAAE,EAAE;YAAEqD,IAAI,EAAE,CAAC;YAAEG,QAAQ,EAAE;UAAI,CAAE;UAAAzD,QAAA,gBAC7DxD,OAAA,CAACV,UAAU;YAAC8G,EAAE,EAAC,YAAY;YAAC3C,EAAE,EAAE;cAAEuB,KAAK,EAAE;YAA2B,CAAE;YAAAxB,QAAA,EAAC;UAAO;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC3FzE,OAAA,CAACT,MAAM;YACL2H,OAAO,EAAC,YAAY;YACpBnE,KAAK,EAAEpC,MAAM,CAACI,IAAK;YACnB6F,QAAQ,EAAE5D,kBAAkB,CAAC,MAAM,CAAE;YACrCqC,KAAK,EAAC,SAAS;YACf5B,EAAE,EAAE;cACFI,OAAO,EAAE,2BAA2B;cACpCmB,KAAK,EAAE,OAAO;cACd,kCAAkC,EAAE;gBAClC0B,WAAW,EAAE;cACf,CAAC;cACD,0CAA0C,EAAE;gBAC1CA,WAAW,EAAE;cACf,CAAC;cACD,gDAAgD,EAAE;gBAChDA,WAAW,EAAE;cACf,CAAC;cACD,kBAAkB,EAAE;gBAClB1B,KAAK,EAAE;cACT;YACF,CAAE;YAAAxB,QAAA,gBAEFxD,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,QAAQ;cAAAS,QAAA,EAAC;YAAM;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC1CzE,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,QAAQ;cAAAS,QAAA,EAAC;YAAM;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eAC1CzE,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,KAAK;cAAAS,QAAA,EAAC;YAAG;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACpCzE,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,KAAK;cAAAS,QAAA,EAAC;YAAG;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACpCzE,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,QAAQ;cAAAS,QAAA,EAAC;YAAa;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC,eACjDzE,OAAA,CAACR,QAAQ;cAACuD,KAAK,EAAC,SAAS;cAAAS,QAAA,EAAC;YAAY;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAU,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,EAELlE,OAAO,gBACNP,OAAA,CAACvB,GAAG;QAACgF,EAAE,EAAE;UAAEE,OAAO,EAAE,MAAM;UAAEwD,cAAc,EAAE,QAAQ;UAAEpC,EAAE,EAAE;QAAE,CAAE;QAAAvB,QAAA,eAC5DxD,OAAA,CAACb,gBAAgB;UAACsE,EAAE,EAAE;YAAEuB,KAAK,EAAE;UAAU;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,GACJpE,cAAc,CAAC+G,MAAM,KAAK,CAAC,gBAC7BpH,OAAA,CAACrB,UAAU;QAACwG,OAAO,EAAC,IAAI;QAAC1B,EAAE,EAAE;UAAEgD,SAAS,EAAE,QAAQ;UAAEY,EAAE,EAAE,CAAC;UAAErC,KAAK,EAAE;QAAiB,CAAE;QAAAxB,QAAA,EAAC;MAEtF;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,gBAEbzE,OAAA,CAACpB,IAAI;QAAC0I,SAAS;QAACC,OAAO,EAAE,CAAE;QAAA/D,QAAA,EACxBnD,cAAc,CAACwF,GAAG,CAAC1F,MAAM,IAAI+C,gBAAgB,CAAC/C,MAAM,CAAC;MAAC;QAAAmE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACvE,EAAA,CAhYQD,UAAU;AAAAuH,EAAA,GAAVvH,UAAU;AAkYnB,eAAeA,UAAU;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}