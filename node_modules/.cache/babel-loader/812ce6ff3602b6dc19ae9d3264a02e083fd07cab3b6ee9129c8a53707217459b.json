{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROGRAMMING\\\\PROGRAMMING\\\\YOUR_lie\\\\anime-streaming-site\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on mount\n    const token = localStorage.getItem('authToken');\n    const userRole = localStorage.getItem('userRole');\n    if (token && userRole) {\n      setUser({\n        role: userRole\n      });\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      // In a real app, this would be an API call\n      // For demo purposes, we'll simulate an API response\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Demo credentials\n      if (email === 'admin@example.com' && password === 'admin123') {\n        const userData = {\n          role: 'admin'\n        };\n        localStorage.setItem('authToken', 'demo-token');\n        localStorage.setItem('userRole', 'admin');\n        setUser(userData);\n        return {\n          success: true\n        };\n      } else {\n        throw new Error('Invalid email or password');\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userRole');\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    logout,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","token","localStorage","getItem","userRole","role","login","email","password","Promise","resolve","setTimeout","userData","setItem","success","Error","error","message","logout","removeItem","value","isAuthenticated","isAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["D:/PROGRAMMING/PROGRAMMING/YOUR_lie/anime-streaming-site/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on mount\r\n    const token = localStorage.getItem('authToken');\r\n    const userRole = localStorage.getItem('userRole');\r\n    if (token && userRole) {\r\n      setUser({ role: userRole });\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      // In a real app, this would be an API call\r\n      // For demo purposes, we'll simulate an API response\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      // Demo credentials\r\n      if (email === 'admin@example.com' && password === 'admin123') {\r\n        const userData = { role: 'admin' };\r\n        localStorage.setItem('authToken', 'demo-token');\r\n        localStorage.setItem('userRole', 'admin');\r\n        setUser(userData);\r\n        return { success: true };\r\n      } else {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n    } catch (error) {\r\n      return { success: false, error: error.message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userRole');\r\n    setUser(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'admin',\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}